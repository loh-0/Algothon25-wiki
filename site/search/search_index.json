{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#welcome-to-susquehanna-x-unsw-financial-technology-societys-2025-algothon","title":"Welcome to Susquehanna x UNSW Financial Technology Society's 2025 Algothon.","text":"<p>Welcome to the sixth year of the Algothon - the first student-led algorithmic trading hackathon in Australia!</p> <p>This site contains the rules, guidelines and information required to help you complete Algothon 2025</p> <p>You can access the Facebook event here.</p> <p>You can access the website here.</p>"},{"location":"1resources/","title":"Resources","text":"<p>Welcome to FinTechSoc's 2025 Algorithmic Trading Hackathon, in collaboration with Susquehanna!</p> <p>This competition will run over two and a half weeks, and is open to all university students. In teams of 2 to 4, students will need to submit their algorithmic model and strategic reasoning in response to price data. If successful in preliminary rounds, teams will proceed to finals Judging and present to traders from .</p> <p>For any questions leading up to or throughout the duration of this competition, please email us at careers.unswfintech+algothon@gmail.com. Make sure to also check out our Facebook event page for more information.</p> <p>\ud83d\udc4c Note: To contact us, email us at careers.unswfintech+algothon@gmail.com.</p>"},{"location":"2guidelines/","title":"Brief","text":""},{"location":"2guidelines/#objective","title":"Objective","text":"<p>Develop a trading strategy algorithm to perform optimally given certain metrics.</p>"},{"location":"2guidelines/#how-to-get-started","title":"How to Get Started","text":"<ol> <li>Assess provided price data from our simulated trading universe.</li> <li>Build a predictive model.</li> <li>Back-test the predictive model across given price data.</li> <li>Evaluate your algorithmic strategy.</li> <li>Hope for the best (just kidding!).</li> <li>Consider factors such as optimisation and risk analysis. Topics that may be explored include:</li> <li>Optimising for trade frequency.</li> <li>Projections for worst-case scenarios and methods to mitigate this.</li> <li>Considering risk factors, and techniques to minimise risk.</li> </ol>"},{"location":"2guidelines/#case-brief","title":"<p>Case Brief</p>","text":""},{"location":"2guidelines/#task","title":"Task","text":"<p>Implement a function getMyPosition() which</p> <ul> <li>Takes as input a NumPy array of the shape nInst x nt.</li> <li>nInst = 50 is the number of instruments.</li> <li>nt is the number of days for which the prices have been provided.</li> <li>Returns a vector of desired positions.</li> <li>i.e. This function returns a NumPy vector of integers. This integer denotes your daily position per instrument in the universe. With 50 instruments, we can expect this function to return 50 integers each time it is called.</li> </ul>"},{"location":"2guidelines/#data","title":"Data","text":"<p>All required data has been generated by us, and is available in the Github repo in the top right corner of this page. We'd highly recommend cloning this repo to use a base for your algorithm development, and to make it easier for submission.</p> <ul> <li>Our simulated trading universe consists of several years of daily price data, spanning 50 instruments.</li> <li>The instruments are numbered from 0 to 49, and days go chronologically from 0 onwards such that p[inst, t] indicates the price of the instrument inst on day t.</li> <li>The price data file contains a NumPy array of the shape nInst x nt.</li> <li>nInst = number of instruments, nt = number of days.</li> </ul> <p>In the preliminary round, teams will be provided price data to be used as training data. This can be found in prices.txt.</p> <ul> <li>There will be an interim leaderboard update. This round is optional and failure will not result in elimination from the competition.</li> <li>Teams will then receive price data and results from the leaderboard evaluation.</li> <li>Preliminary round algorithms will be assessed on the next set of data.</li> <li>Successful teams will then receive price data and results from preliminary evaluation.</li> <li>Final round algorithms will be assessed on the final set of data.</li> </ul>"},{"location":"2guidelines/#the-algorithm","title":"The Algorithm","text":""},{"location":"2guidelines/#format","title":"Format","text":"<p>Algorithms must be contained in a file titled main.py.</p> <ul> <li>This file must contain a function getMyPosition().</li> <li>getMyPosition() must take in the daily price data, and output a vector of integer positions - the numbers of shares desired for each stock as the total final position after the last day.</li> <li>getMyPosition() must be in the global scope of the file called main.py and have the appropriate signature.</li> <li>The function will be called once a day, with the entire price history up to and including that day. For example, on day 200, your function should take as input an array of 50 inst x 200 days.</li> <li>When getMyPosition() is called, we will trade position differences from the previous position at the most recent price, buying or selling.</li> <li>Consider the case where your last position was +30, and the new stock price is $20. If your new position is +50, eval will register this as buying 20 extra shares at $20 a share. If your new position is -200, eval will sell 230 shares also at $20 a share.</li> </ul>"},{"location":"2guidelines/#accepted-packages","title":"Accepted Packages","text":"<p>To ensure that code runs smoothly on the servers used for marking, we advise the following:</p> <ul> <li>Use only standard packages and their respective versions from the Anaconda library. The best way to do this is to simply download Anaconda...</li> <li>Where necessary, packages that are not included as part of Anaconda, or version numbers that are greater than those provided in Anaconda need to be declared in the submission form in the relevant section.</li> </ul> <p>We will attempt to import and run through all non-standard packages if declared. However, in the case that your code still does not run, your team will be disqualified. Similarly, if your submission does not declare a non-standard package or provide a brief description of its use, it will also be disqualified.</p>"},{"location":"2guidelines/#considerations","title":"Considerations","text":"<ul> <li>A commission rate of 10 bps (0.0010) can be assumed, meaning you will be charged commission equating 0.0010 * totalDollarVolumeTraded. This will be deducted from your PL.</li> <li>Positions can be long or short (i.e. the integer positions can be either positive or negative).</li> <li>Teams are limited to a $10k position limit per stock, positive or negative. The $10k limit cannot be breached at the time of the trade.</li> <li>This position limit may technically be exceeded in the case that exactly $10k worth of a stock is bought, and stock goes up the next day - this is fine.</li> <li>However, given this occurs, the position must be slightly reduced to be no greater than $10k by the new day's price.</li> <li>Note: eval.py contains a function to clip positions to a maximum of $10k. This means that if the price is $10 and the algorithm returns a position of 1500 shares, eval.py will assume a request of 1000 shares.</li> </ul>"},{"location":"2guidelines/#assessment-benchmarks","title":"Assessment Benchmarks","text":"<p>The program we will use to evaluate your algorithm is provided in eval.py</p> <p>The formula used will be:</p> <p>mean(PL) - 0.1 * StdDev(PL)</p> <p>Your algorithms will be assessed against unseen, future price data of the same 50 instruments within the provided simulated trading universe.</p> <p>We expect algorithms to have a maximum runtime of ~10min.</p>"},{"location":"3schedule/","title":"Schedule","text":"<p>\ud83d\udc4c Note: For emergencies, please email careers.unswfintech+algothon@gmail.com with the subject title \"[ALGOTHON - Urgent] Subject\".</p>"},{"location":"3schedule/#competition-timeline","title":"Competition: Timeline","text":"<p>5th June, TIME TBD - Pre Event Launch / Workshop 1</p> <p>12th June, TIME TBD - Official Event Launch / Workshop 2</p> <p>29th June, TIME TBD - Registrations Close</p> <p>30th June, TIME TBD - Submission Deadline for Interim Update</p> <p>2nd July, TIME TBD - Mid-Competition Event: Interim Leaderboard Update 1</p> <p>14th July, TIME TBD - General Round Submissions Due</p> <p>18th July, TIME TBD - Finalists Announcement</p> <p>25th July, TIME TBD - Final Round Submissions Due</p> <p>7th August, TIME TBD - Final Presentation</p>"},{"location":"4otherhelp/","title":"Other Help","text":""},{"location":"4otherhelp/#important","title":"IMPORTANT","text":"<p>The following materials serve as supplementary resources to our Algothon workshops. Please refer to the workshop recordings to understand key skills for the competition.</p> <p>Please note that the workshop will not provide all required knowledge for the competition. Additional research will be required, and below provides a great start!!</p>"},{"location":"4otherhelp/#guidance","title":"Guidance","text":"<p>The following is provided only as guidance, to assist with direction in completing this challenge. You can choose to use any, none or all of it, given that your submission fall within the specified criteria. We would like to see different models developed in the competition, and any projects that address the investment themes will have a fair chance at winning!</p> <p>There are almost infinite free resources online regarding both the financials and technicals required in algorithmic trading, but we've compiled a bunch we think are useful!</p> <p>Basics</p> <ul> <li>Beginner's Guide to Quantitative Trading</li> <li>How to Identify Algorithmic Trading Strategies</li> <li>Quantopian: https://gist.github.com/ih2502mk/50d8f7feb614c8676383431b056f4291</li> <li>Quantopian has a bunch of lectures catering to various skill levels, from novices with no programming ability (intro to Python, NumPy, Pandas), to those who want to learn advanced linear regression, portfolio optimisation, beta hedging etc.</li> <li>Learndatasci:   https://www.learndatasci.com/tutorials/</li> <li>This site has a good range of resources related to quantitative analysis! There are some articles around dealing with NumPy and Pandas, as well as a good introduction to algorithmic trading. It even includes a detailed look at a moving-average strategy, with sample code!</li> </ul> <p>Trading Strategies and Analytics</p> <ul> <li>YouTube Series:</li> <li>Big Data Analytics &amp; Algorithmic Stock Trading (Backtesting)</li> <li>Machine Learning and Pattern Recognition for Algorithmic Stock Trading</li> <li>These playlists are pretty extensive and cover a range of topics including basic instructions on how to access and manage stock data, calculating moving averages in Python etc.</li> <li>Backtesting Algorithmic Trading Strategies: Part 1 | Part 2</li> <li>Backtesting a Mean Reversion Trading Strategy</li> <li>Stock Price Prediction with Python and Basic ML</li> <li>Basic Tensorflow (Regression Problems)</li> </ul>"},{"location":"4otherhelp/#technical-advice","title":"Technical Advice","text":""},{"location":"4otherhelp/#starting-out","title":"Starting Out","text":"<p>For the Algothon, participants must have Python installed (v3.6+). We highly recommend using standard popular analytics/plotting libraries such as NumPy, Pandas and Matplotlib.</p> <p>This can be done using the Anaconda package manager, which supports Windows, Linux and Mac. Other libraries such as TensorFlow and SciPy are also supported by Anaconda.</p> <p>Install Anaconda here.</p>"},{"location":"4otherhelp/#data-sources","title":"Data Sources","text":"<p>All data will be provided by FinTechSoc. The trading universe consists of simulated daily price data of 100 instruments.</p> <p>Preliminary round data will be provided at case release. Note that the dataset used for judging will not be the same as the data provided to you.</p> <p>Finalists will be provided the data used to assess preliminary rounds, and will have the opportunity to amend their algorithm. The dataset used to evaluate teams during final presentations will again be unseen data.</p>"},{"location":"4otherhelp/#heavy-computations","title":"Heavy Computations","text":"<p>If you intend to perform large-scale computations, we would recommend setting up cloud computing resources to scale the training of your models. Getting an AWS Educate account will give you access to AWS credits without entering credit card details.</p> <p>Note that this should not be necessary given the volume of data provided by FinTechSoc.</p> <p>Join AWS Educate here.</p> <p>Access documentation of various AWS products and tools here.</p> <p>Find examples for using Amazon SageMaker with the Python SDK here. SageMaker can be used to perform various machine learning tasks.</p>"},{"location":"5submission/","title":"Submission","text":"<p>Leaderboard</p> <p>Stay tuned for updates on how to submit</p>"},{"location":"6criteria/","title":"Judging Criteria","text":""},{"location":"6criteria/#technical-100-preliminary-75-finals","title":"Technical: 100% (Preliminary), 75% (Finals)","text":"<p>Your algorithms will be assessed based on the quality of overall performance, as well as the creativity and originality of implementation.</p> <p>The formula used will be:</p> <p>mean(PL) - 0.1 * StdDev(PL)</p> <p>The algorithm will be evaluated on the basis of what we believe is achievable with the given dataset.</p>"},{"location":"6criteria/#presentation-25-finals","title":"Presentation: 25% (Finals)","text":"<p>Your presentation will be assessed on whether or not there is evidence of:</p> <ul> <li>Clear and engaging delivery and presentation style.</li> <li>Effective communication and convincing presentation.</li> <li>Effective use of presentation tool, if used.</li> <li>Well-structured presentation that adheres to the provided time limit.</li> <li>High technical maturity and understanding of problem and solution.</li> <li>Strong team cohesion, with even presentation distribution </li> </ul> <p>In the finals, Q&amp;A will constitute 10/25 of the presentation scoring points.</p>"},{"location":"7prizes/","title":"Prizes","text":"<p>\ud83e\udd47 1st Place: $5000. \ud83e\udd48 2nd Place: $2000. \ud83e\udd49 3rd Place: $1000.</p>"}]}